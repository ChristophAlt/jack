description: >
  Jack QA light with assertions.

parent_config: './conf/qa/jack_qa_light.yaml'

name: 'jack_qa_light_assertion_reader'
reader: 'modular_assertion_qa_reader'

assertion_dir: '/data/assertion_shelve'
assertion_limit: 50
assertion_sources: ['conceptnet']

reading_module:
  - input: 'text'
    module: 'lstm'
    with_projection: True
    activation: relu

dropout: &dropout 0.2

# To be fast we have to restrict the use of RNNs as much as possible and use convolutions instead
model:
  encoder_layer:
  # Shared Contextual Encoding
  - input: 'support'
    module: 'conv_glu'
    conv_width: 5
    num_layers: 2
    name: 'contextual_encoding'
    residual: True
    dropout: *dropout
  - input: 'question'
    module: 'conv_glu'
    conv_width: 5
    num_layers: 2
    name: 'contextual_encoding'  # use same network as support
    residual: True
    dropout: *dropout

  # Attention
  - input: 'support'
    dependent: 'question'
    module: 'attention_matching'
    attn_type: 'diagonal_bilinear'
    with_sentinel: True  # we gate the attention with an additional scalar sentinel because what we retrieve might actually not be what we were looking for because (softmax) attn always retrieves something
    scaled: True
  - input: 'support'
    module: 'dense'
    with_projection: True
    activation: 'tanh'
    dropout: *dropout

  # Self Attention
  - input: 'support'
    output: 'support_self'
    module: 'self_attn'
    attn_type: 'diagonal_bilinear'
    scaled: True
    with_sentinel: True  # we gate the attention with an additional scalar sentinel because what we retrieve might actually not be what we were looking for because (softmax) attn always retrieves something
    num_attn_heads: 1
  - input: ['support', 'support_self']
    output: 'support'
    module: 'concat'

  # BiLSTM
  - input: 'support'
    module: 'lstm'  # the only application of a RNN
    with_projection: True
    activation: 'tanh'
    dropout: *dropout

  - input: 'support'
    module: 'conv_glu'
    conv_width: 5
    num_layers: 1
    residual: True

  - input: ['support', 'support_self']
    output: 'support'
    module: 'add'
  - input: 'support'
    module: 'conv_glu'
    conv_width: 5
    num_layers: 1
    residual: True

  answer_layer:
    module: 'bilinear'
    max_span_size: 16
